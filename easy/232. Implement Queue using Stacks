//	Stack <-> Queue 문제는 종종 나옴
//	
//	Stack : LIFO + LIFO -> FIFO
//	Queue : FIFO
//	Stack 2개로 Queue를 구현
//	
//	5 1
//	4 2
//	3 3
//	2 4
//	1 5
//	stack1으로 push, stack2에서 out
	
	class MyQueue {
		
		Stack<Integer> stack1;
		Stack<Integer> stack2;

	    /** Initialize your data structure here. */
	    public MyQueue() {
	    	stack1 = new Stack<>();
	    	stack2 = new Stack<>();
	    }
	    
	    /** Push element x to the back of queue. */
	    public void push(int x) {
	        stack1.push(x);
	    }
	    
	    /** Removes the element from in front of queue and returns that element. */
	    public int pop() {
	    	peek();
	    	return stack2.pop();
	    }
	    
	    /** Get the front element. */
	    public int peek() {
	    	if(stack2.isEmpty()){
	    		while(!stack1.isEmpty()){
	    			stack2.push(stack1.pop());
	    		}
	    	}
	    	return stack2.peek();
	    }
	    
	    /** Returns whether the queue is empty. */
	    public boolean empty() {
	        return stack1.isEmpty() && stack2.isEmpty();
	    }
	}
